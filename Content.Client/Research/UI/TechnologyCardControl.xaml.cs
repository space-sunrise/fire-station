using Content.Shared.Research;
using Content.Shared.Research.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using Robust.Shared.Utility;

namespace Content.Client.Research.UI;

[GenerateTypedNameReferences]
public sealed partial class TechnologyCardControl : Control
{
    public Action? OnPressed;

    public TechnologyCardControl(TechnologyPrototype technology, IPrototypeManager prototypeManager, SpriteSystem spriteSys, FormattedMessage description, Dictionary<ProtoId<ResearchPointPrototype>, int> totalPoints, bool hasAccess)
    {
        RobustXamlLoader.Load(this);

        var discipline = prototypeManager.Index<TechDisciplinePrototype>(technology.Discipline);
        Background.ModulateSelfOverride = discipline.Color;

        DisciplineTexture.Texture = spriteSys.Frame0(discipline.Icon);
        TechnologyNameLabel.Text = Loc.GetString(technology.Name);
        var message = new FormattedMessage();
        message.AddMarkupOrThrow(Loc.GetString("research-console-tier-discipline-info",
            ("tier", technology.Tier), ("color", discipline.Color), ("discipline", Loc.GetString(discipline.Name))));
        TierLabel.SetMessage(message);
        UnlocksLabel.SetMessage(description);

        TechnologyTexture.Texture = spriteSys.Frame0(technology.Icon);

        if (!hasAccess)
            ResearchButton.ToolTip = Loc.GetString("research-console-no-access-popup");

        ResearchButton.Disabled = !CanBuy(technology.Cost, totalPoints) || !hasAccess;
        ResearchButton.OnPressed += _ => OnPressed?.Invoke();
    }

    private bool CanBuy(Dictionary<ProtoId<ResearchPointPrototype>, int> cost, Dictionary<ProtoId<ResearchPointPrototype>, int> totalPoints)
    {
        foreach (var (researchPointType, requiredAmount) in cost)
        {
            if (!totalPoints.TryGetValue(researchPointType, out var point))
                return false;

            if (point < requiredAmount)
                return false;
        }

        return true;
    }
}
