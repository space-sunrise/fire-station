using System.Numerics;
using Content.Client.Resources;
using Content.Shared._Sunrise.Lobby;
using Robust.Client.AutoGenerated;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared;
using Robust.Shared.Configuration;
using Robust.Shared.Prototypes;
using Robust.Shared.Utility;

namespace Content.Client.MainMenu.UI;

[GenerateTypedNameReferences]
public sealed partial class MainMenuControl : Control
{
    private const string AnimationId = "DeepFacility"; // Fire added

    public MainMenuControl(IResourceCache resCache, IConfigurationManager configMan)
    {
        RobustXamlLoader.Load(this);

        LayoutContainer.SetAnchorPreset(this, LayoutContainer.LayoutPreset.Wide);

        LayoutContainer.SetAnchorPreset(VBox, LayoutContainer.LayoutPreset.TopRight);
        LayoutContainer.SetMarginRight(VBox, -25);
        LayoutContainer.SetMarginTop(VBox, 30);
        LayoutContainer.SetGrowHorizontal(VBox, LayoutContainer.GrowDirection.Begin);
        SetAnimation(); // Fire added

        var logoTexture = resCache.GetTexture("/Textures/_Scp/Logo/logo-hollow.png"); // Fire edit
        Logo.Texture = logoTexture;
        Logo.TextureScale = new Vector2(0.125f, 0.125f);

        var currentUserName = configMan.GetCVar(CVars.PlayerName);
        UsernameBox.Text = currentUserName;
    }

    // Fire added start - анимация при загрузке вместо паралакса
    private void SetAnimation()
    {
        var prototypeManager = IoCManager.Resolve<IPrototypeManager>();

        if (!prototypeManager.TryIndex<LobbyAnimationPrototype>(AnimationId, out var lobbyAnimationPrototype))
            return;

        ConnectionAnimation.SetFromSpriteSpecifier(new SpriteSpecifier.Rsi(new ResPath(lobbyAnimationPrototype.RawPath), lobbyAnimationPrototype.State));
        ConnectionAnimation.DisplayRect.TextureScale = lobbyAnimationPrototype.Scale;
        ConnectionAnimation.DisplayRect.Stretch = TextureRect.StretchMode.Scale;
    }
    // Fire added end
}
