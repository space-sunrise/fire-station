/*
* File: grain.swsl
* Author: rhailrake
* Description: Shader for adding a grain effect to the screen.
* License: MIT.
*/

light_mode unshaded;

uniform sampler2D SCREEN_TEXTURE; // Текстура экрана
uniform lowp float strength = 120.0; // Сила эффекта зерна

void fragment()
{
    // Используем lowp чтобы затрачивать меньше времени на вычисления.
    // Минус -> Жертвуем точностью, но в данном случае она особо не нужна.

    // UV координаты:
    // U соответствует горизонтальной оси (X), V - вертикальной (Y).
    // Здесь UV используется для определения позиции каждого пикселя на экране.
    lowp vec4 color = texture(SCREEN_TEXTURE, UV);

    // Создаем временной фактор для анимации зерна.
    lowp float timeFactor = TIME * 10.0;

    // Генерируем псевдослучайное число на основе UV координат и времени.
    // Это создает уникальное значение для каждого пикселя, которое меняется со временем.
    lowp float x = (UV.x + 4.0) * (UV.y + 4.0) * timeFactor;

    // mod:
    // Функция mod возвращает остаток от деления одного числа на другое.
    // В шейдерах mod часто используется для:
    // 1. Создания повторяющихся паттернов.
    // 2. Ограничения значений в определенном диапазоне.
    // 3. Генерации псевдослучайных чисел.

    // Здесь mod используется для создания повторяющегося, но визуально случайного паттерна.
    lowp float modX = mod(x, 13.0) + 1.0;
    lowp float modY = mod(x, 123.0) + 1.0;

    // Еще раз используем mod для ограничения значения зерна в диапазоне от -0.005 до 0.005.
    // Это контролирует интенсивность эффекта зерна.
    lowp float grainValue = mod(modX * modY, 0.01) - 0.005;

    // Применяем эффект зерна к цвету.
    // Уменьшаем яркость пикселя пропорционально значению зерна и силе эффекта.
    color *= (1.0 - grainValue * strength);

    // Выводим эффект.
    COLOR = color;
}
