uniform highp vec2 playerScreenPos;
uniform mediump vec2 playerForward;
uniform mediump float fovCosMinusHardness;
uniform mediump float fovCosPlusHardness;
uniform mediump float coneOpacity;
uniform highp float safeZoneRadius;
uniform mediump float safeZoneEdgeWidth;

uniform sampler2D SCREEN_TEXTURE;
uniform sampler2D BLURRED_TEXTURE;

void fragment() {
    highp vec2 toPixel = FRAGCOORD.xy - playerScreenPos;
    highp float distance = length(toPixel);

    mediump vec2 directionToPixel = distance > 0.001 ? normalize(toPixel) : vec2(0.0, 1.0);
    mediump float dotProduct = dot(playerForward, directionToPixel);

    mediump float coneFactor = smoothstep(fovCosPlusHardness, fovCosMinusHardness, dotProduct);

    mediump vec4 inFovColor = texture(SCREEN_TEXTURE, UV);
    mediump vec4 blurredColor = texture(BLURRED_TEXTURE, UV);
    mediump vec4 outOfFovColor = mix(blurredColor, vec4(0.0, 0.0, 0.0, 1.0), coneOpacity);

    mediump vec4 effectColor = mix(inFovColor, outOfFovColor, coneFactor);

    mediump float safeZoneFactor = smoothstep(safeZoneRadius + safeZoneEdgeWidth, safeZoneRadius, distance);

    COLOR = mix(effectColor, inFovColor, safeZoneFactor);
}
